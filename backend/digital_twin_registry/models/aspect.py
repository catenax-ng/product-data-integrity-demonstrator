# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from pydantic import Field
from .http_endpoint import HttpEndpoint
from .model_reference import ModelReference
from digital_twin_registry.dependencies import MyBaseModel


class Aspect(MyBaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Aspect - a model defined in OpenAPI

        id: The id of this Aspect.
        model_reference: The model_reference of this Aspect.
        http_endpoints: The http_endpoints of this Aspect.
    """

    id: str
    model_reference: ModelReference = Field(None, alias='modelReference')
    http_endpoints: List[HttpEndpoint] = Field(None, alias='httpEndpoints')

Aspect.update_forward_refs()
